#!/usr/bin/with-contenv bash

silent() {
  if [ "$DEBUG_MODE" = "TRUE" ] || [ "$DEBUG_MODE" = "true" ];  then
    "$@"
  else
    "$@" > /dev/null 2>&1
  fi
}

if [ "$DEBUG_MODE" = "TRUE" ] || [ "$DEBUG_MODE" = "true" ];  then
  set -x
fi

### Sanity Test
if [ ! -n "$DB_HOST" ]; then
    echo '** [wordpress] ERROR: No Database Host Entered!'
    exit 1
fi

if [ ! -n "$DB_NAME" ]; then
    echo '** [wordpress] ERROR: No Database Pass Entered!'
    exit 1
fi

if [ ! -n "$DB_USER" ]; then
    echo '** [wordpress] ERROR: No Database User Entered!'
    exit 1
fi

if [ ! -n "$DB_PASS" ]; then
    echo '** [wordpress] ERROR: No Database Pass Entered!'
    exit 1
fi

if [ ! -n "$SITE_URL" ]; then
    echo '** [wordpress] ERROR: No SITE_URL Entered!'
    exit 1
fi

### Set Defaults
ADMIN_USER=${ADMIN_USER:-"admin"}
ENABLE_HTTPS_REVERSE_PROXY=${ENABLE_HTTPS_REVERSE_PROXY:-"TRUE"}
DB_CHARSET=${DB_CHARSET:-"utf8mb4"}
DB_PREFIX=${DB_PREFIX:-"wp_"}
DB_PORT=${DB_PORT:-3306}
SITE_TITLE=${SITE_TITLE:-"Wordpress Docker Site"}
SITE_LOCALE=${SITE_LOCALE:-"en_US"}
FORCE_RESET_PERMISSIONS=${FORCE_RESET_PERMISSIONS:-"true"}

if [ -n "$SITE_PORT" ]; then
    SITE_PORT=":${SITE_PORT}"
fi

### Create Directory if doesn't exist
mkdir -p ${NGINX_WEBROOT}
if [ "${FORCE_RESET_PERMISSIONS}" == "true"  ]; then
    chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
fi
### Make sure that DB is accessible
while true; do
    mysqlcmd="mysql -u$DB_USER -h$DB_HOST -p$DB_PASS -P$DB_PORT"
    out="`$mysqlcmd -e "SELECT COUNT(*) FROM information_schema.FILES;" 2>&1`"
    echo "$out" | grep -E "COUNT|Enter" 2>&1 > /dev/null
    if [ $? -eq 0 ]; then
        echo "** [wordpress] MariaDB Server '${DB_HOST}' is available"
        break
    fi
    echo "** [wordpress] MariaDB Server '${DB_HOST}' unavailable. Sleeping a little bit ..."
    sleep 5
done

### Perform Nginx reverse proxy modifications
if [ "$ENABLE_HTTPS_REVERSE_PROXY" = "TRUE" ] || [ "$ENABLE_HTTPS_REVERSE_PROXY" = "true" ]; then
    echo "fastcgi_param  HTTPS 'on';" >> /etc/nginx/fastcgi_params
    PROTOCOL="https://"
else
    echo "** [wordpress] Disabling Nginx Reverse Proxy HTTPS Termination Support"
    echo "fastcgi_param  HTTPS 'off';" >> /etc/nginx/fastcgi_params
    PROTOCOL="http://"
fi

### Check to see if this is a new install, if yes download Wordpress and other pieces...
if [ ! -f ${NGINX_WEBROOT}/wp-load.php ] ; then
    if [ ! -n "$ADMIN_EMAIL" ]; then
        echo "** [wordpress] ERROR: No Admin Email Address Entered!""
        exit 1
    fi

    if [ ! -n "$ADMIN_PASS" ]; then
        echo "** [wordpress] ERROR: No Admin Pass Entered!""
        exit 1
    fi

   echo "** [wordpress] Wordpress Installation not found, Downloading and setting up - Please wait 1-3 minutes"
   cd ${NGINX_WEBROOT}
   silent sudo -u ${NGINX_USER} wp-cli core download --locale=${SITE_LOCALE}
   silent sudo -u ${NGINX_USER} wp-cli core config --dbhost=${DB_HOST} --dbname=${DB_NAME} --dbprefix=${DB_PREFIX} --dbuser=${DB_USER} --dbpass=${DB_PASS} --dbcharset=${DB_CHARSET}
   silent sudo -u ${NGINX_USER} wp-cli core install --url=${PROTOCOL}${SITE_URL}${SITE_PORT} --title="${SITE_TITLE}" --admin_user=${ADMIN_USER} --admin_password=${ADMIN_PASS} --admin_email=${ADMIN_EMAIL} --skip-email
   chmod 644 wp-config.php
### Add URL information to allow for switching host/domainnames easily
   echo "define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   echo "define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   silent rm -rf ${NGINX_WEBROOT}/readme.html
   silent rm -rf ${NGINX_WEBROOT}/license.txt
   silent rm -rf ${NGINX_WEBROOT}/wp-content/plugins/hello.php
   silent chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
else

   if ! grep -c -q "'WP_HOME'" ${NGINX_WEBROOT}/wp-config.php ; then
       echo "define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   fi

   if ! grep -c -q "'WP_SITEURL'" ${NGINX_WEBROOT}/wp-config.php ; then
       echo "define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   fi

### Change URLs if different   
   OLDURL=`grep "WP_HOME" ${NGINX_WEBROOT}/wp-config.php | cut -d \' -f 4`
   if [ "$OLDURL" != "${PROTOCOL}${SITE_URL}${SITE_PORT}" ]; then
       cd ${NGINX_WEBROOT}
       echo "** [wordpress] Modifying wordpress to serve from ${OLDURL} to ${PROTOCOL}${SITE_URL}${SITE_PORT} - Please wait"
       sed -i "s#define( 'WP_HOME'.*#define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );#g" ${NGINX_WEBROOT}/wp-config.php
       sed -i "s#define( 'WP_SITEURL'.*#define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );#g" ${NGINX_WEBROOT}/wp-config.php
       silent sudo -u ${NGINX_USER} wp-cli search-replace '${OLD_URL}' '${PROTOCOL}${SITE_URL}${SITE_PORT}' --skip-columns=guid
   fi 
fi

### Add alias for running WP-CLI
echo "alias wp-cli='cd ${NGINX_WEBROOT}; sudo -u ${NGINX_USER} wp-cli'" > /root/.bashrc

### Force Reset Permissions for Security

if [ "${FORCE_RESET_PERMISSIONS}" == "true"  ]; then
    silent chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
fi

echo "** [wordpress] Wordpress Initialization Complete, now starting webserver and PHP engine"

touch /tmp/state/30-init-wordpress
